services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: DOCKER://kafka1:9092,LOCAL://kafka1:19092,OUTSIDE://kafka1:29092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka1:9092,LOCAL://localhost:19092,OUTSIDE://34.23.119.16:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,LOCAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
    ports:
      - "19092:19092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: DOCKER://kafka2:9092,LOCAL://kafka2:19093,OUTSIDE://kafka2:29093
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka2:9092,LOCAL://localhost:19093,OUTSIDE://34.23.119.16:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,LOCAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
    ports:
      - "19093:19093"
      - "29093:29093"
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: DOCKER://kafka3:9092,LOCAL://kafka3:19094,OUTSIDE://kafka3:29094
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka3:9092,LOCAL://localhost:19094,OUTSIDE://34.23.119.16:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,LOCAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
    ports:
      - "19094:19094"
      - "29094:29094"
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - zookeeper
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka1:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic query --replication-factor 3 --partitions 3 --config segment.bytes=150000 --config retention.bytes=3000000 --config retention.ms=120000
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic p_arrival --replication-factor 3 --partitions 3 --config segment.bytes=150000 --config retention.bytes=3000000 --config retention.ms=120000
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic pick --replication-factor 3 --partitions 3 --config segment.bytes=150000 --config retention.bytes=3000000 --config retention.ms=120000
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:9092 --list
      "
    networks:
      - kafka-net

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    environment:
      KAFKA_BROKER_CONNECT: "kafka1:9092,kafka2:9092,kafka3:9092" # Adjust for your cluster
      JVM_OPTS: "-Xms32M -Xmx64M"
    ports:
      - "9000:9000" # Kafdrop UI accessible on http://localhost:9000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
